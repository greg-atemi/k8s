{{- range $name, $deployment := .Values.xc }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      volumes:
        - name: {{ $deployment.volume }}
          persistentVolumeClaim:
            claimName: {{ $deployment.pvc }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          imagePullPolicy: Always
          command:
            - "/bin/sh"
            - "/opt/jboss/wildfly/configure_wildfly.sh"
          volumeMounts:
            - mountPath: "{{ $deployment.fundmastergeneralfilesmountPath }}"
              name: {{ $deployment.volume }}
            - mountPath: "{{ $deployment.batchuploadsmountPath }}"
              name: {{ $deployment.volume }}
          env:
            - name: WILDFLY_USERNAME
              value: "{{ $deployment.environment.WILDFLY_USERNAME }}"
            - name: WILDFLY_PASSWORD
              value: "{{ $deployment.environment.WILDFLY_PASSWORD }}"
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
          ports:
            - containerPort: 8080
            - containerPort: 8443
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

---

{{- range $name, $deployment := .Values.mss }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      volumes:
        - name: {{ $deployment.volume }}
          persistentVolumeClaim:
            claimName: {{ $deployment.pvc }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          imagePullPolicy: Always
          command:
            - "/bin/sh"
            - "/opt/jboss/wildfly/configure_wildfly.sh"
          volumeMounts:
            - mountPath: "{{ $deployment.mountPath }}"
              name: {{ $deployment.volume }}
          env:
            - name: WILDFLY_USERNAME
              value: "{{ $deployment.environment.WILDFLY_USERNAME }}"
            - name: WILDFLY_PASSWORD
              value: "{{ $deployment.environment.WILDFLY_PASSWORD }}"
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
          ports:
            - containerPort: 8080
            - containerPort: 8443
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

---

{{- range $name, $deployment := .Values.reports }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
            - name: HIBERNATE_DIALECT
              value: "{{ $deployment.environment.HIBERNATE_DIALECT }}"
            - name: DATABASE_DRIVER_CLASS
              value: "{{ $deployment.environment.DATABASE_DRIVER_CLASS }}"
            - name: CLIENT
              value: "{{ $deployment.environment.CLIENT }}"
          ports:
            - containerPort: 8081
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

  {{- range $name, $deployment := .Values.workflow }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
            - name: HIBERNATE_DIALECT
              value: "{{ $deployment.environment.HIBERNATE_DIALECT }}"
            - name: DATABASE_DRIVER_CLASS
              value: "{{ $deployment.environment.DATABASE_DRIVER_CLASS }}"
            - name: CLIENT
              value: "{{ $deployment.environment.CLIENT }}"
          ports:
            - containerPort: 8081
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

  {{- range $name, $deployment := .Values.amlpep }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      volumes:
        - name: {{ $deployment.volume }}
          persistentVolumeClaim:
            claimName: {{ $deployment.pvc }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          volumeMounts:
            - mountPath: "{{ $deployment.mountPath }}"
              name: {{ $deployment.volume }}
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
            - name: HIBERNATE_DIALECT
              value: "{{ $deployment.environment.HIBERNATE_DIALECT }}"
            - name: DATABASE_DRIVER_CLASS
              value: "{{ $deployment.environment.DATABASE_DRIVER_CLASS }}"
          ports:
            - containerPort: 8081
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

  {{- range $name, $deployment := .Values.notifications }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      volumes:
        - name: {{ $deployment.volume }}
          persistentVolumeClaim:
            claimName: {{ $deployment.pvc }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          volumeMounts:
            - mountPath: "{{ $deployment.mountPath }}"
              name: {{ $deployment.volume }}
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
            - name: HIBERNATE_DIALECT
              value: "{{ $deployment.environment.HIBERNATE_DIALECT }}"
            - name: DATABASE_DRIVER_CLASS
              value: "{{ $deployment.environment.DATABASE_DRIVER_CLASS }}"
            - name: KAFKA_URL
              value: "{{ $deployment.environment.KAFKA_URL }}"
            - name: FILES_DIR
              value: "/notifications/files"
          ports:
            - containerPort: 8081
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

  {{- range $name, $deployment := .Values.schedulers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $deployment.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{ $deployment.node }}
      containers:
        - name: {{ $name }}
          image: "{{ $deployment.image.repository }}:{{ $deployment.image.tag }}"
          imagePullPolicy: Always
          command:
            - "/bin/sh"
            - "/opt/jboss/wildfly/configure_wildfly.sh"
          env:
            - name: WILDFLY_USERNAME
              value: "{{ $deployment.environment.WILDFLY_USERNAME }}"
            - name: WILDFLY_PASSWORD
              value: "{{ $deployment.environment.WILDFLY_PASSWORD }}"
            - name: DATABASE_URL
              value: "{{ $deployment.environment.DATABASE_URL }}"
            - name: DATABASE_USERNAME
              value: "{{ $deployment.environment.DATABASE_USERNAME }}"
            - name: DATABASE_PASSWORD
              value: "{{ $deployment.environment.DATABASE_PASSWORD }}"
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: gitlab-registry-secret
  {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oldmutualke-kafka
  labels:
    app: oldmutualke-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oldmutualke-kafka
  template:
    metadata:
      labels:
        app: oldmutualke-kafka
    spec:
      nodeSelector:
        kubernetes.io/hostname: sim-worker1.systechafrica.com
      hostname: broker
      containers:
        - name: oldmutualke-kafka
          image: "apache/kafka:latest"
          imagePullPolicy: Always
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT_HOST://oldmutualke-kafka.oldmutual.svc.cluster.local:2255,PLAINTEXT://kafka.oldmutualke-kafka.svc.cluster.local:19092"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@broker:29093"
            - name: KAFKA_LISTENERS
              value: "CONTROLLER://:29093,PLAINTEXT_HOST://:2255,PLAINTEXT://:19092"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: CLUSTER_ID
              value: "4L6g3nShT-eMCtK--X86sw"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kraft-combined-logs"
          ports:
            - containerPort: 2255
            - containerPort: 19092
      imagePullSecrets:
        - name: gitlab-registry-secret

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oldmutualug-kafka
  labels:
    app: oldmutualug-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oldmutualug-kafka
  template:
    metadata:
      labels:
        app: oldmutualug-kafka
    spec:
      nodeSelector:
        kubernetes.io/hostname: sim-worker2.systechafrica.com
      hostname: broker
      containers:
        - name: oldmutualug-kafka
          image: "apache/kafka:latest"
          imagePullPolicy: Always
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT_HOST://oldmutualug-kafka.oldmutual.svc.cluster.local:2256,PLAINTEXT://kafka.oldmutualke-kafka.svc.cluster.local:19093"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@broker:29093"
            - name: KAFKA_LISTENERS
              value: "CONTROLLER://:29093,PLAINTEXT_HOST://:2256,PLAINTEXT://:19093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: CLUSTER_ID
              value: "4L6g3nShT-eMCtK--X86sw"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kraft-combined-logs"
          ports:
            - containerPort: 2256
            - containerPort: 19093
      imagePullSecrets:
        - name: gitlab-registry-secret
